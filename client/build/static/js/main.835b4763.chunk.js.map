{"version":3,"sources":["components/Login.js","components/Navbar.js","components/Schedular.js","components/Dashboard.js","components/EditProfile.js","components/Messages.js","App.js","index.js"],"names":["Login","state","enteredUsername","enteredPassword","currentUserId","loggedIn","currentDashboard","_this","renderRedirect","react_default","a","createElement","react_router","to","onTextChange","event","previousData","Object","objectSpread","target","name","value","console","log","concat","setState","verifyData","_callee","currentUser","verifiedUser","regenerator_default","wrap","_context","prev","next","preventDefault","username","password","axios","post","sent","data","_id","alert","stop","this","className","type","placeholder","required","onChange","onClick","Component","Navbar","default","editProfile","props","currentProfile","returnToDashboard","viewMessages","isCreateUserPage","react_router_dom","messagesPage","isEditPage","Schedular","currentMonth","Date","selectedDate","onDateClick","day","nextMonth","prevMonth","renderDays","renderCells","Dashboard","currentRoute","match","params","id","email","isAdmin","getDashboard","get","Navbar_Navbar","editPage","Schedular_Schedular","EditProfile","submitEdit","editedUser","put","getEditProfileScreen","_callee2","editScreen","_context2","Messages","isMessages","messages","allUsers","messageContent","dateSent","sentByName","sentToName","sentById","sentToId","setDateTime","dateTime","formatdateTime","moment","format","getMessages","currentMessages","setUser","currentUserInfo","setSendData","asyncToGenerator","mark","_callee3","sentUserData","_context3","getDifferentUsers","_callee4","_context4","sendMessage","_callee5","newMessage","_context5","setInterval","clearInterval","_this2","allMessages","map","message","i","key","differentUsers","users","rows","cols","App","exact","path","component","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.835b4763.chunk.js","sourcesContent":["\r\nimport React, { Component } from 'react'\r\nimport axios from 'axios'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nexport default class Login extends Component {\r\n\r\n    state = {\r\n        enteredUsername: '',\r\n        enteredPassword: '',\r\n        currentUserId: '',\r\n        loggedIn: false\r\n    }\r\n\r\n    currentDashboard = `/dashboard/${this.state.currentUserId}`\r\n\r\n    renderRedirect = () => {\r\n        if (this.state.loggedIn) {\r\n            return <Redirect to={this.currentDashboard}></Redirect>\r\n        }\r\n    }\r\n\r\n    onTextChange = (event) => {\r\n        const previousData = { ...this.state }\r\n        previousData[event.target.name] = event.target.value\r\n        console.log(`${event.target.name}: ${event.target.value}`)\r\n        this.setState(previousData)\r\n    }\r\n\r\n    verifyData = async (event) => {\r\n        event.preventDefault()\r\n        const currentUser = {\r\n            username: this.state.enteredUsername,\r\n            password: this.state.enteredPassword\r\n        }\r\n        const verifiedUser = await axios.post('/verify', currentUser)\r\n        console.log(verifiedUser)\r\n        console.log(verifiedUser.data._id)\r\n        if (verifiedUser.data !== 'error') {\r\n            this.setState({currentUserId: verifiedUser.data._id}, () => {\r\n                this.currentDashboard = `/dashboard/${this.state.currentUserId}`\r\n                this.setState({loggedIn: true})\r\n            })\r\n        } else {\r\n            alert('Username/Password Incorrect')\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.renderRedirect()}\r\n                <h1 className=\"schedular text-shadow\">SCHEDUL&lambda;R</h1>\r\n                <div className=\"login animated animatedFadeInUp fadeInUp\">\r\n                    <form className=\"form shadow\">\r\n                        <h4>Username</h4>\r\n                        <input\r\n                            className=\"username\"\r\n                            name=\"enteredUsername\"\r\n                            type=\"string\"\r\n                            placeholder=\"Username\"\r\n                            required\r\n                            onChange={this.onTextChange}\r\n                            value={this.state.enteredUsername}\r\n                        ></input>\r\n                        <h4>Password</h4>\r\n                        <input\r\n                            className=\"password\"\r\n                            name=\"enteredPassword\"\r\n                            type=\"password\"\r\n                            placeholder=\"Password\"\r\n                            required\r\n                            onChange={this.onTextChange}\r\n                            value={this.state.enteredPassword}\r\n                        ></input>\r\n                        <input\r\n                            className=\"submit\" \r\n                            type=\"submit\" \r\n                            onClick={this.verifyData} \r\n                            value=\"Login\"\r\n                        ></input>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","\r\nimport React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default class Navbar extends Component {\r\n\r\n    state = {\r\n        default: ''\r\n    }\r\n\r\n    editProfile = `/dashboard/edit/${this.props.currentProfile}`\r\n    returnToDashboard = `/dashboard/${this.props.currentProfile}`\r\n    viewMessages = `/dashboard/messages/${this.props.currentProfile}`\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"navbar-container\">\r\n                <div className=\"navbar-items\">\r\n                    {this.props.isCreateUserPage === true\r\n                    ? \r\n                        <Link className=\"navbar-option\" to={this.returnToDashboard}>\r\n                            Return to Dashboard\r\n                        </Link>\r\n                    :\r\n                        <Link className=\"navbar-option\" to={this.editProfile}>\r\n                            Create User\r\n                        </Link>\r\n                    }\r\n                    {this.props.messagesPage === true\r\n                    ? \r\n                        <Link className=\"navbar-option\" to={this.returnToDashboard}>\r\n                            Return to Dashboard\r\n                        </Link>                    \r\n                    :\r\n                        <Link className=\"navbar-option\" to={this.viewMessages}>\r\n                            Messages\r\n                        </Link>\r\n                    }\r\n                    {this.props.isEditPage === true\r\n                    ? \r\n                        <Link className=\"navbar-option\" to={this.returnToDashboard}>\r\n                            Return to Dashboard\r\n                        </Link>\r\n                    :\r\n                        <Link className=\"navbar-option\" to={this.editProfile}>\r\n                            Edit Profile\r\n                        </Link>\r\n                    }\r\n                    <Link className=\"navbar-option\" to='/'>Logout</Link>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n    // import dateFns from 'date-fns'\r\nimport axios from 'axios'\r\n\r\nexport default class Schedular extends Component {\r\n\r\n    state = {\r\n        currentMonth: new Date(),\r\n        selectedDate: new Date()\r\n    }\r\n\r\n    // renderHeader() {\r\n    //     const dateFormat = \"MMMM YYYY\"\r\n\r\n    //     return (\r\n    //         <div className=\"header row flex-middle\">\r\n    //             <div className=\"col col-start\">\r\n    //                 <div className=\"icon\" onClick={this.prevMonth}>\r\n    //                     chevron_left\r\n    //                 </div>\r\n    //             </div>\r\n    //             <div className=\"col col-center\">\r\n    //                 <span>\r\n    //                     {dateFns.format(this.state.currentMonth, dateFormat)}\r\n    //                 </span>\r\n    //             </div>\r\n    //             <div className=\"col col-end\" onClick={this.nextMonth}>\r\n    //                 <div className=\"icon\">\r\n    //                     chevron_right\r\n    //                 </div>\r\n    //             </div>\r\n    //         </div>\r\n    //     )\r\n    // }\r\n\r\n    renderDays() {\r\n    }\r\n\r\n    renderCells() {\r\n    }\r\n\r\n    onDateClick = (day) => {\r\n    }\r\n\r\n    nextMonth = () => {\r\n    }\r\n\r\n    prevMonth = () => {\r\n    }\r\n\r\n    render() {\r\n    return (\r\n      <div className=\"calendar\">\r\n        {/* {this.renderHeader()} */}\r\n        {this.renderDays()}\r\n        {this.renderCells()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","\r\nimport React, { Component } from 'react'\r\nimport axios from 'axios'\r\nimport Navbar from './Navbar.js'\r\nimport Schedular from './Schedular.js'\r\n\r\nexport default class Dashboard extends Component {\r\n\r\n    currentRoute = this.props.match.params.id\r\n\r\n    state = {\r\n        _id: '',\r\n        email: '',\r\n        isAdmin: false,\r\n        password:'',\r\n        username: '',\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getDashboard()\r\n    }\r\n\r\n    getDashboard = async () => {\r\n        const currentDashboard = await axios.get(`/api/dashboard/${this.currentRoute}`)\r\n        this.setState(currentDashboard.data)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"component-container\">\r\n                <Navbar currentProfile={this.props.match.params.id} editPage={false}/>\r\n                <Schedular />\r\n                <h1>Hello World</h1>\r\n                <h1>{this.state.username}</h1>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","\r\nimport React, { Component } from 'react'\r\nimport axios from 'axios'\r\nimport Navbar from './Navbar.js'\r\n\r\n\r\nexport default class EditProfile extends Component {\r\n\r\n\r\n    state = {\r\n        _id: '',\r\n        email: '',\r\n        isAdmin: false,\r\n        password:'',\r\n        username: '',\r\n        isEditPage: true\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        this.getEditProfileScreen()\r\n    }\r\n\r\n    onTextChange = (event) => {\r\n        const previousData = { ...this.state }\r\n        previousData[event.target.name] = event.target.value\r\n        this.setState(previousData)\r\n    }\r\n\r\n    submitEdit = async (event) => {\r\n        const editedUser = { ...this.state }\r\n        await axios.put(`/api/dashboard/edit/${this.props.match.params.id}`, editedUser)\r\n        alert('Profile Edited!')\r\n        this.getEditProfileScreen()\r\n    }\r\n\r\n    getEditProfileScreen = async () => {\r\n        const editScreen = await axios.get(`/api/dashboard/edit/${this.props.match.params.id}`)\r\n        this.setState(editScreen.data)\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"component-container\">\r\n                <Navbar isEditPage={this.state.isEditPage} currentProfile={this.props.match.params.id}/>\r\n                <div className=\"edit-profile\">\r\n                    <h3>Current Profile</h3>\r\n                    <form className=\"form\">\r\n                        <h4>Username</h4>\r\n                        <input\r\n                            onChange={this.onTextChange}\r\n                            name=\"username\"\r\n                            type=\"string\"\r\n                            placeholder=\"New Username\"\r\n                        ></input>\r\n                        <h4>Email</h4>\r\n                        <input\r\n                            onChange={this.onTextChange}\r\n                            name=\"email\"\r\n                            type=\"string\"\r\n                            placeholder = \"New Email\"\r\n                        ></input>\r\n                        <h4>Change Password</h4>\r\n                        <input\r\n                            name=\"password\"\r\n                            onChange={this.onTextChange}\r\n                            type=\"password\"\r\n                            placeholder=\"New Password\"\r\n                        ></input>\r\n                        <input\r\n                            className=\"submit\"\r\n                            type=\"submit\"\r\n                            value=\"Edit Profile\"\r\n                            onClick={this.submitEdit}\r\n                        ></input>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport axios from 'axios'\r\nimport Navbar from './Navbar'\r\nimport moment from 'moment'\r\n\r\n\r\n\r\nexport default class Messages extends Component {\r\n\r\n    state = {\r\n        isMessages: true,\r\n        messages: [],\r\n        allUsers: [],\r\n        messageContent: '',\r\n        dateSent: '',\r\n        sentByName: '',\r\n        sentToName: '',\r\n        sentById: '',\r\n        sentToId: '',\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setUser()\r\n        this.getDifferentUsers()\r\n        setInterval(this.getMessages, 1000)\r\n        setInterval(this.setDateTime, 1000)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.getMessages())\r\n        clearInterval(this.setDateTime, 1000)\r\n    }\r\n\r\n    setDateTime = () => {\r\n        const dateTime = new Date();\r\n        let formatdateTime = moment(dateTime).format(\"YYYY-MM-DD HH:mm:ss\")\r\n        this.setState({dateSent: formatdateTime})\r\n    }\r\n\r\n    getMessages = async () => {\r\n        const currentMessages = await axios.get(`/api/messages/${this.props.match.params.id}`)\r\n        this.setState({messages: currentMessages.data})\r\n    }\r\n\r\n    setUser = async () => {\r\n        const currentUser = await axios.get(`/api/getusers/${this.props.match.params.id}`) \r\n        const currentUserInfo = {\r\n            sentById: currentUser.data._id,\r\n            sentByName: currentUser.data.username\r\n        }\r\n        this.setState(currentUserInfo)\r\n    }\r\n\r\n    onTextChange = (event) => {\r\n        const previousData = { ...this.state }\r\n        previousData[event.target.name] = event.target.value\r\n        console.log(`${event.target.name}: ${event.target.value}`)\r\n        this.setState(previousData)\r\n    }\r\n\r\n    setSendData = (event) => {\r\n        this.setState({sentToId: event.target.value}, async () => {\r\n            const sentUserData = await axios.get(`/api/getusers/${this.state.sentToId}`)\r\n            this.setState({sentToName: sentUserData.data.username})\r\n        })\r\n        this.setUser()\r\n    }\r\n\r\n    getDifferentUsers = async () => {\r\n        const allUsers = await axios.get('/api/getusers/')\r\n        this.setState({allUsers: allUsers.data}) \r\n    }\r\n\r\n    sendMessage = async (event) => {\r\n        event.preventDefault()\r\n         const newMessage = {\r\n            messageContent: this.state.messageContent,\r\n            dateSent: this.state.dateSent,\r\n            sentByName: this.state.sentByName,\r\n            sentToName: this.state.sentToName,\r\n            sentById: this.state.sentById,\r\n            sentToId: this.state.sentToId,\r\n         }\r\n         await axios.post('/api/send-message', newMessage)\r\n         this.getMessages()\r\n    }\r\n\r\n    render() {\r\n        const allMessages = this.state.messages.map((message, i) => {\r\n            if (message.sentById === this.state.sentById) {\r\n                return (\r\n                    <div className=\"message-container-user\">\r\n                        <p key={message._id} className=\"message\">{message.messageContent}</p>\r\n                        <p key={i} className=\"date-subtext-user\">Sent: {moment(message.dateSent).format(\"YYYY-MM-DD HH:mm:ss\")}</p>\r\n                    </div>\r\n                )\r\n            } else if (message.sentById === this.state.sentToId) {\r\n                return (\r\n                    <div className=\"message-container\">\r\n                        <p key={message._id} className=\"message\">{message.sentByName}: {message.messageContent}</p>\r\n                        <p key={i} className=\"date-subtext\">Sent: {message.dateSent}</p>\r\n                    </div>\r\n                )\r\n            }\r\n        })\r\n\r\n        \r\n        const differentUsers = this.state.allUsers.map((users) => {\r\n            return (\r\n                <option key={users._id} value={users._id}>{users.username}</option>\r\n            )\r\n        })\r\n\r\n        return (\r\n\r\n            <div>\r\n                <Navbar currentProfile={this.props.match.params.id} editPage={false} messagesPage={this.state.isMessages}/>\r\n                <select className=\"select-name\" name=\"sentToId\" onChange={this.setSendData}>\r\n                    {differentUsers}\r\n                </select>\r\n                <div className=\"message-box\"> \r\n                    <div className=\"all-messages\">\r\n                        {allMessages}\r\n                    </div>\r\n                    <form className=\"message-form\">\r\n                    <textarea\r\n                        rows=\"2\"\r\n                        cols=\"50\"\r\n                        type=\"text\"\r\n                        name=\"messageContent\"\r\n                        onChange={this.onTextChange}\r\n                    ></textarea>\r\n                    <input\r\n                        className=\"submit-messages\"\r\n                        type=\"submit\"\r\n                        value=\"send\"\r\n                        onClick={this.sendMessage}\r\n                    ></input>\r\n                </form>\r\n                </div>\r\n            </div>  \r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\r\nimport Login from './components/Login'\r\nimport Dashboard from './components/Dashboard'\r\nimport EditProfile from './components/EditProfile'\r\nimport Messages from './components/Messages'\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Router>\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Login}/>\r\n          <Route path=\"/dashboard/edit/:id\" component={EditProfile}></Route>\r\n          <Route path=\"/dashboard/messages/:id\" component={Messages}></Route>\r\n          <Route path=\"/dashboard/:id\" component={Dashboard}></Route>\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}