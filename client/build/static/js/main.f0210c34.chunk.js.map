{"version":3,"sources":["components/Login.js","components/Navbar.js","components/Schedular.js","components/Dashboard.js","components/EditProfile.js","components/Messages.js","components/CreateUser.js","App.js","index.js"],"names":["Login","state","enteredUsername","enteredPassword","currentUserId","loggedIn","currentDashboard","_this","seedAdminData","_callee","Admin","regenerator_default","a","wrap","_context","prev","next","axios","get","sent","data","console","log","username","password","email","isAdmin","post","stop","renderRedirect","react_default","createElement","react_router","to","onTextChange","event","previousData","Object","objectSpread","target","name","value","concat","setState","verifyData","_callee2","currentUser","verifiedUser","_context2","preventDefault","_id","alert","this","className","type","placeholder","required","onChange","onClick","Component","Navbar","editProfile","props","currentProfile","returnToDashboard","viewMessages","createUser","checkIfAdmin","react_router_dom","isCreateUserPage","messagesPage","isEditPage","Schedular","currentMonth","Date","selectedDate","Dashboard","currentRoute","match","params","id","getDashboard","Navbar_Navbar","generateSchedule","Schedular_Schedular","EditProfile","submitEdit","editedUser","put","getEditProfileScreen","editScreen","Messages","isMessages","messages","allUsers","messageContent","dateSent","sentByName","sentToName","sentById","sentToId","messagesEndRef","React","createRef","setDateTime","dateTime","formatdateTime","moment","format","scrollToBottom","current","scrollIntoView","behavior","getMessages","currentMessages","length","setUser","currentUserInfo","setSendData","asyncToGenerator","mark","_callee3","sentUserData","_context3","getDifferentUsers","_callee4","_context4","sendMessage","_callee5","newMessage","_context5","setInterval","clearInterval","_this2","allMessages","map","message","i","key","differentUsers","users","editPage","ref","HelloWorld","createUserPage","newUsername","newPassword","newEmail","newAvailability","newIsAdmin","submitNewUser","newUser","availability","App","exact","path","component","CreateUser","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.f0210c34.chunk.js","sourcesContent":["\r\nimport React, { Component } from 'react'\r\nimport axios from 'axios'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nexport default class Login extends Component {\r\n\r\n    state = {\r\n        enteredUsername: '',\r\n        enteredPassword: '',\r\n        currentUserId: '',\r\n        loggedIn: false\r\n    }\r\n\r\n    currentDashboard = `/dashboard/${this.state.currentUserId}`\r\n\r\n    componentDidMount() {\r\n        this.seedAdminData()\r\n    }\r\n\r\n    seedAdminData = async () => {\r\n        const adminExist = await axios.get('/api/getadmin/')\r\n        if (adminExist.data[0]) {\r\n            console.log('Admin account exists')\r\n        } else {\r\n            const Admin = {\r\n                username: 'admin',\r\n                password: 'admin',\r\n                email: 'admin@admin.com',\r\n                isAdmin: true\r\n            }\r\n            await axios.post('/api/createuser/', Admin)\r\n        }\r\n    }\r\n\r\n    renderRedirect = () => {\r\n        if (this.state.loggedIn) {\r\n            return <Redirect to={this.currentDashboard}></Redirect>\r\n        }\r\n    }\r\n\r\n    onTextChange = (event) => {\r\n        const previousData = { ...this.state }\r\n        previousData[event.target.name] = event.target.value\r\n        console.log(`${event.target.name}: ${event.target.value}`)\r\n        this.setState(previousData)\r\n    }\r\n\r\n    verifyData = async (event) => {\r\n        event.preventDefault()\r\n        const currentUser = {\r\n            username: this.state.enteredUsername,\r\n            password: this.state.enteredPassword\r\n        }\r\n        const verifiedUser = await axios.post('/verify', currentUser)\r\n        console.log(verifiedUser)\r\n        console.log(verifiedUser.data._id)\r\n        if (verifiedUser.data !== 'error') {\r\n            this.setState({currentUserId: verifiedUser.data._id}, () => {\r\n                this.currentDashboard = `/dashboard/${this.state.currentUserId}`\r\n                this.setState({loggedIn: true})\r\n            })\r\n        } else {\r\n            alert('Username/Password Incorrect')\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.renderRedirect()}\r\n                <div className=\"login animated animatedFadeInUp fadeInUp\">\r\n                    <h1 className=\"schedular text-shadow\">SCHEDUL&lambda;R</h1>\r\n                    <form className=\"form shadow\">\r\n                        <h4>Username</h4>\r\n                        <input\r\n                            className=\"username\"\r\n                            name=\"enteredUsername\"\r\n                            type=\"string\"\r\n                            placeholder=\"Username\"\r\n                            required\r\n                            onChange={this.onTextChange}\r\n                            value={this.state.enteredUsername}\r\n                        ></input>\r\n                        <h4>Password</h4>\r\n                        <input\r\n                            className=\"password\"\r\n                            name=\"enteredPassword\"\r\n                            type=\"password\"\r\n                            placeholder=\"Password\"\r\n                            required\r\n                            onChange={this.onTextChange}\r\n                            value={this.state.enteredPassword}\r\n                        ></input>\r\n                        <input\r\n                            className=\"submit\" \r\n                            type=\"submit\" \r\n                            onClick={this.verifyData} \r\n                            value=\"Login\"\r\n                        ></input>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","\r\nimport React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default class Navbar extends Component {\r\n\r\n    state = {\r\n        isAdmin: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({isAdmin: this.props.isAdmin})\r\n    }\r\n\r\n    editProfile = `/dashboard/edit/${this.props.currentProfile}`\r\n    returnToDashboard = `/dashboard/${this.props.currentProfile}`\r\n    viewMessages = `/dashboard/messages/${this.props.currentProfile}`\r\n    createUser = `/dashboard/createuser/${this.props.currentProfile}`\r\n\r\n    checkIfAdmin = () => {\r\n        if (this.props.isAdmin === true) {\r\n            return (\r\n                <Link className=\"navbar-option\" to={this.editProfile}>\r\n                    Create User\r\n                </Link>\r\n            )\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"navbar\">\r\n                <div className=\"navbar-container\">\r\n                    <div className=\"navbar-items\">\r\n                        {this.props.isCreateUserPage\r\n                        ? \r\n                            <Link className=\"navbar-option\" to={this.returnToDashboard}>\r\n                                Return to Dashboard\r\n                            </Link>\r\n                        :\r\n                            <Link className=\"navbar-option\" to={this.createUser}>\r\n                                Create User\r\n                            </Link>\r\n                        }\r\n                        {this.props.messagesPage === true\r\n                        ? \r\n                            <Link className=\"navbar-option\" to={this.returnToDashboard}>\r\n                                Return to Dashboard\r\n                            </Link>                    \r\n                        :\r\n                            <Link className=\"navbar-option\" to={this.viewMessages}>\r\n                                Messages\r\n                            </Link>\r\n                        }\r\n                        {this.props.isEditPage === true\r\n                        ? \r\n                            <Link className=\"navbar-option\" to={this.returnToDashboard}>\r\n                                Return to Dashboard\r\n                            </Link>\r\n                        :\r\n                            <Link className=\"navbar-option\" to={this.editProfile}>\r\n                                Edit Profile\r\n                            </Link>\r\n                        }\r\n                        <Link className=\"navbar-option\" to='/'>Logout</Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport axios from 'axios'\r\n\r\nexport default class Schedular extends Component {\r\n\r\n    state = {\r\n        currentMonth: new Date(),\r\n        selectedDate: new Date()\r\n    }\r\n\r\n    render() {\r\n    return (\r\n      <div className=\"calendar\">\r\n        <h1>Hello World</h1>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","\r\nimport React, { Component } from 'react'\r\nimport axios from 'axios'\r\nimport Navbar from './Navbar.js'\r\nimport Schedular from './Schedular.js'\r\n\r\nexport default class Dashboard extends Component {\r\n\r\n    currentRoute = this.props.match.params.id\r\n\r\n    state = {\r\n        _id: '',\r\n        email: '',\r\n        isAdmin: false,\r\n        password:'',\r\n        username: '',\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getDashboard()\r\n    }\r\n\r\n    getDashboard = async () => {\r\n        const currentDashboard = await axios.get(`/api/dashboard/${this.currentRoute}`)\r\n        this.setState(currentDashboard.data)\r\n    }\r\n\r\n    // generateSchedule = async () => {\r\n\r\n    // }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Navbar \r\n                    currentProfile={this.props.match.params.id} \r\n                    isAdmin={this.state.isAdmin}\r\n                />\r\n                <div className=\"component-container\">\r\n                    <button onClick={this.generateSchedule}>Generate Schedule</button>\r\n                    <Schedular />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","\r\nimport React, { Component } from 'react'\r\nimport axios from 'axios'\r\nimport Navbar from './Navbar.js'\r\n\r\n\r\nexport default class EditProfile extends Component {\r\n\r\n\r\n    state = {\r\n        _id: '',\r\n        email: '',\r\n        isAdmin: false,\r\n        password:'',\r\n        username: '',\r\n        isEditPage: true\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        this.getEditProfileScreen()\r\n    }\r\n\r\n    onTextChange = (event) => {\r\n        const previousData = { ...this.state }\r\n        previousData[event.target.name] = event.target.value\r\n        this.setState(previousData)\r\n    }\r\n\r\n    submitEdit = async (event) => {\r\n        const editedUser = { ...this.state }\r\n        await axios.put(`/api/dashboard/edit/${this.props.match.params.id}`, editedUser)\r\n        alert('Profile Edited!')\r\n        this.getEditProfileScreen()\r\n    }\r\n\r\n    getEditProfileScreen = async () => {\r\n        const editScreen = await axios.get(`/api/dashboard/edit/${this.props.match.params.id}`)\r\n        this.setState(editScreen.data)\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Navbar \r\n                    isEditPage={this.state.isEditPage} \r\n                    currentProfile={this.props.match.params.id}\r\n                />\r\n                <div className=\"edit-profile\">\r\n                    <h3>Current Profile</h3>\r\n                    <form className=\"form\">\r\n                        <h4>Username</h4>\r\n                        <input\r\n                            onChange={this.onTextChange}\r\n                            name=\"username\"\r\n                            type=\"string\"\r\n                            placeholder=\"New Username\"\r\n                        ></input>\r\n                        <h4>Email</h4>\r\n                        <input\r\n                            onChange={this.onTextChange}\r\n                            name=\"email\"\r\n                            type=\"string\"\r\n                            placeholder = \"New Email\"\r\n                        ></input>\r\n                        <h4>Change Password</h4>\r\n                        <input\r\n                            name=\"password\"\r\n                            onChange={this.onTextChange}\r\n                            type=\"password\"\r\n                            placeholder=\"New Password\"\r\n                        ></input>\r\n                        <input\r\n                            className=\"submit\"\r\n                            type=\"submit\"\r\n                            value=\"Edit Profile\"\r\n                            onClick={this.submitEdit}\r\n                        ></input>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport axios from 'axios'\r\nimport Navbar from './Navbar'\r\nimport moment from 'moment'\r\n\r\n\r\n\r\nexport default class Messages extends Component {\r\n\r\n    state = {\r\n        isMessages: true,\r\n        messages: [],\r\n        allUsers: [],\r\n        messageContent: '',\r\n        dateSent: '',\r\n        sentByName: '',\r\n        sentToName: '',\r\n        sentById: '',\r\n        sentToId: '',\r\n    }\r\n\r\n    messagesEndRef = React.createRef()\r\n\r\n    componentDidMount() {\r\n        this.setUser()\r\n        this.getDifferentUsers()\r\n        setInterval(this.getMessages, 1000)\r\n        setInterval(this.setDateTime, 1000)\r\n    }\r\n\r\n    // componentDidUpdate() {\r\n    //     this.scrollToBottom()\r\n    // }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.getMessages())\r\n        clearInterval(this.setDateTime, 1000)\r\n    }\r\n\r\n    setDateTime = () => {\r\n        const dateTime = new Date();\r\n        let formatdateTime = moment(dateTime).format(\"YYYY-MM-DD HH:mm:ss\")\r\n        this.setState({dateSent: formatdateTime})\r\n    }\r\n\r\n    scrollToBottom = () => {\r\n        this.messagesEndRef.current.scrollIntoView({ behavior: 'smooth' })\r\n    }\r\n\r\n    getMessages = async () => {\r\n        const currentMessages = await axios.get(`/api/messages/${this.props.match.params.id}`)\r\n        if (currentMessages.data.length > this.state.messages.length) {\r\n            this.setState({messages: currentMessages.data}, this.scrollToBottom)\r\n        }\r\n    }\r\n\r\n    setUser = async () => {\r\n        const currentUser = await axios.get(`/api/getusers/${this.props.match.params.id}`) \r\n        const currentUserInfo = {\r\n            sentById: currentUser.data._id,\r\n            sentByName: currentUser.data.username,\r\n        }\r\n        this.setState(currentUserInfo)\r\n    }\r\n\r\n    onTextChange = (event) => {\r\n        const previousData = { ...this.state }\r\n        previousData[event.target.name] = event.target.value\r\n        this.setState(previousData)\r\n    }\r\n\r\n    setSendData = (event) => {\r\n        console.log(event.target.value)\r\n        this.setState({sentToId: event.target.value}, async () => {\r\n            const sentUserData = await axios.get(`/api/getusers/${this.state.sentToId}`)\r\n            this.setState({sentToName: sentUserData.data.username})\r\n        })\r\n        this.setUser()\r\n    }\r\n\r\n    getDifferentUsers = async () => {\r\n        const allUsers = await axios.get('/api/getusers/')\r\n        this.setState({allUsers: allUsers.data}) \r\n    }\r\n\r\n    sendMessage = async (event) => {\r\n        event.preventDefault()\r\n         const newMessage = {\r\n            messageContent: this.state.messageContent,\r\n            dateSent: this.state.dateSent,\r\n            sentByName: this.state.sentByName,\r\n            sentToName: this.state.sentToName,\r\n            sentById: this.state.sentById,\r\n            sentToId: this.state.sentToId,\r\n         }\r\n         await axios.post('/api/send-message', newMessage)\r\n         this.setState({messageContent: ''})\r\n         this.getMessages()\r\n         this.scrollToBottom()\r\n    }\r\n\r\n    render() {\r\n        const allMessages = this.state.messages.map((message, i) => {\r\n            if (message.sentById === this.state.sentById) {\r\n                return (\r\n                    <div className=\"message-container-user\">\r\n                        <p key={message._id} className=\"message\">{message.messageContent}</p>\r\n                        <p key={i} className=\"date-subtext-user\">Sent: {moment(message.dateSent).format(\"YYYY-MM-DD HH:mm:ss\")}</p>\r\n                    </div>\r\n                )\r\n            } else if (message.sentById === this.state.sentToId) {\r\n                return (\r\n                    <div className=\"message-container\">\r\n                        <p key={message._id} className=\"message\">{message.sentByName}: {message.messageContent}</p>\r\n                        <p key={i} className=\"date-subtext\">Sent: {message.dateSent}</p>\r\n                    </div>\r\n                )\r\n            }\r\n        })\r\n\r\n        \r\n        const differentUsers = this.state.allUsers.map((users) => {\r\n            return (\r\n                <option key={users._id} value={users._id}>{users.username}</option>\r\n            )\r\n        })\r\n\r\n        return (\r\n\r\n            <div>\r\n                <Navbar currentProfile={this.props.match.params.id} editPage={false} messagesPage={this.state.isMessages}/>\r\n                <div className=\"message-area\">\r\n                    <h1>Current user: {this.state.sentByName}</h1>\r\n                    <select className=\"select-name\" name=\"sentToId\" onChange={this.setSendData}>\r\n                        {differentUsers}\r\n                    </select>\r\n                    <div className=\"message-box\"> \r\n                        <div className=\"all-messages\">\r\n                            {allMessages}\r\n                            <div ref={this.messagesEndRef} />\r\n                        </div>\r\n                        <form className=\"message-form\">\r\n                            <input\r\n                                type=\"text\"\r\n                                name=\"messageContent\"\r\n                                onChange={this.onTextChange}\r\n                                value={this.state.messageContent}\r\n                            ></input>\r\n                            <input\r\n                                className=\"submit-messages\"\r\n                                type=\"submit\"\r\n                                value=\"send\"\r\n                                onClick={this.sendMessage}\r\n                            ></input>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>  \r\n        )\r\n    }\r\n}\r\n","\r\nimport React, { Component } from 'react'\r\nimport axios from 'axios'\r\nimport Navbar from './Navbar'\r\n\r\nexport default class HelloWorld extends Component {\r\n\r\n\r\n    state = {\r\n        createUserPage: true,\r\n        newUsername: \"\",\r\n        newPassword: \"\",\r\n        newEmail: \"\",\r\n        newAvailability: 0,\r\n        newIsAdmin: false,\r\n        isAdmin: false\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        this.setUser()\r\n    }\r\n\r\n    setUser = async () => {\r\n        const currentUser = await axios.get(`/api/getusers/${this.props.match.params.id}`) \r\n        const currentUserInfo = {\r\n            isAdmin: currentUser.data.isAdmin\r\n        }\r\n        this.setState(currentUserInfo)\r\n    }\r\n\r\n    onTextChange = (event) => {\r\n        const previousData = { ...this.state }\r\n        previousData[event.target.name] = event.target.value\r\n        this.setState(previousData)\r\n    }\r\n\r\n    submitNewUser = async (event) => {\r\n        event.preventDefault()\r\n        const newUser = { \r\n            username: this.state.newUsername,\r\n            password: this.state.newPassword,\r\n            email: this.state.newEmail,\r\n            availability: this.state.newAvailability,\r\n            isAdmin: this.state.newIsAdmin\r\n        }\r\n        await axios.post(`/api/createuser/`, newUser)\r\n        alert('Profile created!')\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Navbar \r\n                    currentProfile={this.props.match.params.id} \r\n                    isCreateUserPage={this.state.createUserPage} \r\n                    isAdmin={this.state.isAdmin}\r\n                />\r\n                <div className=\"create-user\">\r\n                    <form className=\"form\">\r\n                        <h3>New Username</h3>\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"newUsername\"\r\n                            onChange={this.onTextChange}\r\n                            value={this.state.newUsername}\r\n                        ></input>\r\n                        <h3>New Password</h3>\r\n                        <input\r\n                            type=\"password\"\r\n                            name=\"newPassword\"\r\n                            onChange={this.onTextChange}\r\n                            value={this.state.newPassword}\r\n                        ></input>\r\n                        <h3>New Email</h3>\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"newEmail\"\r\n                            onChange={this.onTextChange}\r\n                            value={this.state.newEmail}\r\n                        ></input>\r\n                        <h3>Availability (Total Work Hours in 7 Day Week)</h3>\r\n                        <input\r\n                            type=\"number\"\r\n                            name=\"newAvailability\"\r\n                            onChange={this.onTextChange}\r\n                            value={this.state.newAvailability}\r\n                        ></input>\r\n                        <h3>Admin</h3>\r\n                        <select name=\"newIsAdmin\">\r\n                            <option value=\"true\">Yes</option>\r\n                            <option value=\"false\">No</option>\r\n                        </select>\r\n                        <input\r\n                            type=\"submit\"\r\n                            value=\"Create User\"\r\n                            onClick={this.submitNewUser}\r\n                        ></input>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\r\nimport Login from './components/Login'\r\nimport Dashboard from './components/Dashboard'\r\nimport EditProfile from './components/EditProfile'\r\nimport Messages from './components/Messages'\r\nimport CreateUser from './components/CreateUser'\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Router>\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Login}/>\r\n          <Route path=\"/dashboard/edit/:id\" component={EditProfile}></Route>\r\n          <Route path=\"/dashboard/messages/:id\" component={Messages}></Route>\r\n          <Route path=\"/dashboard/createuser/:id\" component={CreateUser}></Route>\r\n          <Route path=\"/dashboard/:id\" component={Dashboard}></Route>\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}